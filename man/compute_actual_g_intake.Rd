% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_actual_g_intake.R
\name{compute_actual_g_intake}
\alias{compute_actual_g_intake}
\title{Compute Actual Gram Intake}
\usage{
compute_actual_g_intake(
  maintable,
  food_details,
  food_ingredients,
  non_gram_foods = NULL,
  location_col,
  key = "survey_id",
  group = TRUE
)
}
\arguments{
\item{maintable}{A data frame with survey-level information (must include
the column specified in \code{key} and the specified \code{location_col}).}

\item{food_details}{A data frame with food-level information (must include
the column specified in \code{key}, plus \code{desc_of_food}, \code{qty_food_consumed},
\code{unit_qty_food_consumed}, and \code{food_item_price_prop_consumed}).}

\item{food_ingredients}{A data frame with ingredient-level information (must include
the column specified in \code{key}, \code{food_details_rowid}, \code{food_ingredients_used},
\code{food_ingredient_amt}, and \code{food_ingredient_unit}).}

\item{non_gram_foods}{Optional. A data frame produced from
\code{\link[=get_non_gram_foods]{get_non_gram_foods()}} and filled by the user with conversions
(must include \code{food_item}, \code{unit}, \code{amount}, and \code{gram}).
If \code{NULL}, the function will check for non-gram units and stop if found.}

\item{location_col}{Character string. Name of the location column in \code{maintable}
(e.g., \code{"subcounty"}, \code{"district"}).}

\item{key}{Character string. The column name that uniquely links
\code{maintable}, \code{food_details}, and \code{food_ingredients}.
Defaults to \code{"survey_id"}.}

\item{group}{Logical, default = \code{TRUE}. If \code{TRUE}, results are aggregated
by \code{key} and \code{food_item}, returning summed \code{actual_gram_intake} only.
If \code{FALSE}, detailed row-level data (with intermediate columns) is returned.}
}
\value{
A tibble:
\itemize{
\item If \code{group = TRUE}: columns \code{key} - Survey identifier, \code{food_item} - Name of food or ingredient, \code{actual_gram_intake} - Final computed intake in grams
\item If \code{group = FALSE}: detailed columns including \code{amt_consumed} - Amount reported, \code{unit} - Unit of measurement,
\code{prop_consumed} - Proportion consumed \verb{(default = 1 if missing)}, \code{gram_per_unit} - Conversion factor \verb{(grams per unit, from non-gram foods)},
and \code{actual_gram_intake} - Final computed intake in grams
}
}
\description{
Computes the actual gram intake for foods and ingredients from dietary recall
data. Handles both gram-based and non-gram units, with support for user-
provided non-gram conversion data (from \code{\link[=get_non_gram_foods]{get_non_gram_foods()}}).
}
\details{
\itemize{
\item If \code{non_gram_foods} is \code{NULL} and non-gram units are found, the function
will stop and request a conversion sheet.
\item If provided, \code{non_gram_foods} must include the same location column
(specified in \code{location_col}), along with columns
\code{food_item}, \code{unit}, \code{amount}, and \code{gram}.
\item The function warns the user if any non-gram foods lack a valid
\code{gram_per_unit}.
}
}
\examples{
data("dietrecall_example")
data("non_gram_foods_conversion")

# Default: grouped output, ready for FCT merge
result_grouped <- compute_actual_g_intake(
  maintable = dietrecall_example$maintable,
  food_details = dietrecall_example$food_details,
  food_ingredients = dietrecall_example$food_ingredients_group,
  non_gram_foods = non_gram_foods_conversion,
  location_col = "subcounty",
  key = "survey_id",
  group = FALSE
)

head(result_grouped)

# Detailed output (row-level), useful for debugging
result_detailed <- compute_actual_g_intake(
  maintable = dietrecall_example$maintable,
  food_details = dietrecall_example$food_details,
  food_ingredients = dietrecall_example$food_ingredients_group,
  non_gram_foods = non_gram_foods_conversion,
  location_col = "subcounty",
  key = "survey_id"
)

head(result_detailed)

}
